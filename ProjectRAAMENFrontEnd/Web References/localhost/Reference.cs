//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ProjectRAAMENFrontEnd.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByUsernameAndPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertRamenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRamenOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRamenOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRamenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRamenByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMeatOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDetailOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService() {
            this.Url = global::ProjectRAAMENFrontEnd.Properties.Settings.Default.ProjectRAAMENFrontEnd_localhost_WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertCustomerCompletedEventHandler InsertCustomerCompleted;
        
        /// <remarks/>
        public event InsertStaffCompletedEventHandler InsertStaffCompleted;
        
        /// <remarks/>
        public event GetUserByUsernameAndPasswordCompletedEventHandler GetUserByUsernameAndPasswordCompleted;
        
        /// <remarks/>
        public event GetUserByIdCompletedEventHandler GetUserByIdCompleted;
        
        /// <remarks/>
        public event UpdateUserProfileCompletedEventHandler UpdateUserProfileCompleted;
        
        /// <remarks/>
        public event GetAllCustomerCompletedEventHandler GetAllCustomerCompleted;
        
        /// <remarks/>
        public event GetAllStaffCompletedEventHandler GetAllStaffCompleted;
        
        /// <remarks/>
        public event InsertRamenCompletedEventHandler InsertRamenCompleted;
        
        /// <remarks/>
        public event GetAllRamenCompletedEventHandler GetAllRamenCompleted;
        
        /// <remarks/>
        public event UpdateRamenCompletedEventHandler UpdateRamenCompleted;
        
        /// <remarks/>
        public event DeleteRamenCompletedEventHandler DeleteRamenCompleted;
        
        /// <remarks/>
        public event GetRamenByIdCompletedEventHandler GetRamenByIdCompleted;
        
        /// <remarks/>
        public event GetAllMeatCompletedEventHandler GetAllMeatCompleted;
        
        /// <remarks/>
        public event InsertHeaderCompletedEventHandler InsertHeaderCompleted;
        
        /// <remarks/>
        public event InsertDetailCompletedEventHandler InsertDetailCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertCustomer(string Username, string Password, string Gender, string Email) {
            object[] results = this.Invoke("InsertCustomer", new object[] {
                        Username,
                        Password,
                        Gender,
                        Email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCustomerAsync(string Username, string Password, string Gender, string Email) {
            this.InsertCustomerAsync(Username, Password, Gender, Email, null);
        }
        
        /// <remarks/>
        public void InsertCustomerAsync(string Username, string Password, string Gender, string Email, object userState) {
            if ((this.InsertCustomerOperationCompleted == null)) {
                this.InsertCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCustomerOperationCompleted);
            }
            this.InvokeAsync("InsertCustomer", new object[] {
                        Username,
                        Password,
                        Gender,
                        Email}, this.InsertCustomerOperationCompleted, userState);
        }
        
        private void OnInsertCustomerOperationCompleted(object arg) {
            if ((this.InsertCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCustomerCompleted(this, new InsertCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertStaff", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertStaff(string Username, string Password, string Gender, string Email) {
            object[] results = this.Invoke("InsertStaff", new object[] {
                        Username,
                        Password,
                        Gender,
                        Email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertStaffAsync(string Username, string Password, string Gender, string Email) {
            this.InsertStaffAsync(Username, Password, Gender, Email, null);
        }
        
        /// <remarks/>
        public void InsertStaffAsync(string Username, string Password, string Gender, string Email, object userState) {
            if ((this.InsertStaffOperationCompleted == null)) {
                this.InsertStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertStaffOperationCompleted);
            }
            this.InvokeAsync("InsertStaff", new object[] {
                        Username,
                        Password,
                        Gender,
                        Email}, this.InsertStaffOperationCompleted, userState);
        }
        
        private void OnInsertStaffOperationCompleted(object arg) {
            if ((this.InsertStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertStaffCompleted(this, new InsertStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserByUsernameAndPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserByUsernameAndPassword(string Username, string Password) {
            object[] results = this.Invoke("GetUserByUsernameAndPassword", new object[] {
                        Username,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByUsernameAndPasswordAsync(string Username, string Password) {
            this.GetUserByUsernameAndPasswordAsync(Username, Password, null);
        }
        
        /// <remarks/>
        public void GetUserByUsernameAndPasswordAsync(string Username, string Password, object userState) {
            if ((this.GetUserByUsernameAndPasswordOperationCompleted == null)) {
                this.GetUserByUsernameAndPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByUsernameAndPasswordOperationCompleted);
            }
            this.InvokeAsync("GetUserByUsernameAndPassword", new object[] {
                        Username,
                        Password}, this.GetUserByUsernameAndPasswordOperationCompleted, userState);
        }
        
        private void OnGetUserByUsernameAndPasswordOperationCompleted(object arg) {
            if ((this.GetUserByUsernameAndPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByUsernameAndPasswordCompleted(this, new GetUserByUsernameAndPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserById(int Id) {
            object[] results = this.Invoke("GetUserById", new object[] {
                        Id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByIdAsync(int Id) {
            this.GetUserByIdAsync(Id, null);
        }
        
        /// <remarks/>
        public void GetUserByIdAsync(int Id, object userState) {
            if ((this.GetUserByIdOperationCompleted == null)) {
                this.GetUserByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByIdOperationCompleted);
            }
            this.InvokeAsync("GetUserById", new object[] {
                        Id}, this.GetUserByIdOperationCompleted, userState);
        }
        
        private void OnGetUserByIdOperationCompleted(object arg) {
            if ((this.GetUserByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByIdCompleted(this, new GetUserByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserProfile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateUserProfile(string Username, string Email, string Gender, int Id) {
            object[] results = this.Invoke("UpdateUserProfile", new object[] {
                        Username,
                        Email,
                        Gender,
                        Id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserProfileAsync(string Username, string Email, string Gender, int Id) {
            this.UpdateUserProfileAsync(Username, Email, Gender, Id, null);
        }
        
        /// <remarks/>
        public void UpdateUserProfileAsync(string Username, string Email, string Gender, int Id, object userState) {
            if ((this.UpdateUserProfileOperationCompleted == null)) {
                this.UpdateUserProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserProfileOperationCompleted);
            }
            this.InvokeAsync("UpdateUserProfile", new object[] {
                        Username,
                        Email,
                        Gender,
                        Id}, this.UpdateUserProfileOperationCompleted, userState);
        }
        
        private void OnUpdateUserProfileOperationCompleted(object arg) {
            if ((this.UpdateUserProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserProfileCompleted(this, new UpdateUserProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllCustomer() {
            object[] results = this.Invoke("GetAllCustomer", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCustomerAsync() {
            this.GetAllCustomerAsync(null);
        }
        
        /// <remarks/>
        public void GetAllCustomerAsync(object userState) {
            if ((this.GetAllCustomerOperationCompleted == null)) {
                this.GetAllCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCustomerOperationCompleted);
            }
            this.InvokeAsync("GetAllCustomer", new object[0], this.GetAllCustomerOperationCompleted, userState);
        }
        
        private void OnGetAllCustomerOperationCompleted(object arg) {
            if ((this.GetAllCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCustomerCompleted(this, new GetAllCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllStaff", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllStaff() {
            object[] results = this.Invoke("GetAllStaff", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllStaffAsync() {
            this.GetAllStaffAsync(null);
        }
        
        /// <remarks/>
        public void GetAllStaffAsync(object userState) {
            if ((this.GetAllStaffOperationCompleted == null)) {
                this.GetAllStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllStaffOperationCompleted);
            }
            this.InvokeAsync("GetAllStaff", new object[0], this.GetAllStaffOperationCompleted, userState);
        }
        
        private void OnGetAllStaffOperationCompleted(object arg) {
            if ((this.GetAllStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllStaffCompleted(this, new GetAllStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertRamen", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertRamen(string RamenName, int MeatId, string Broth, int Price) {
            object[] results = this.Invoke("InsertRamen", new object[] {
                        RamenName,
                        MeatId,
                        Broth,
                        Price});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertRamenAsync(string RamenName, int MeatId, string Broth, int Price) {
            this.InsertRamenAsync(RamenName, MeatId, Broth, Price, null);
        }
        
        /// <remarks/>
        public void InsertRamenAsync(string RamenName, int MeatId, string Broth, int Price, object userState) {
            if ((this.InsertRamenOperationCompleted == null)) {
                this.InsertRamenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRamenOperationCompleted);
            }
            this.InvokeAsync("InsertRamen", new object[] {
                        RamenName,
                        MeatId,
                        Broth,
                        Price}, this.InsertRamenOperationCompleted, userState);
        }
        
        private void OnInsertRamenOperationCompleted(object arg) {
            if ((this.InsertRamenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertRamenCompleted(this, new InsertRamenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllRamen", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllRamen() {
            object[] results = this.Invoke("GetAllRamen", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRamenAsync() {
            this.GetAllRamenAsync(null);
        }
        
        /// <remarks/>
        public void GetAllRamenAsync(object userState) {
            if ((this.GetAllRamenOperationCompleted == null)) {
                this.GetAllRamenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRamenOperationCompleted);
            }
            this.InvokeAsync("GetAllRamen", new object[0], this.GetAllRamenOperationCompleted, userState);
        }
        
        private void OnGetAllRamenOperationCompleted(object arg) {
            if ((this.GetAllRamenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRamenCompleted(this, new GetAllRamenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRamen", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateRamen(int Id, string RamenName, int MeatId, string Broth, int Price) {
            object[] results = this.Invoke("UpdateRamen", new object[] {
                        Id,
                        RamenName,
                        MeatId,
                        Broth,
                        Price});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRamenAsync(int Id, string RamenName, int MeatId, string Broth, int Price) {
            this.UpdateRamenAsync(Id, RamenName, MeatId, Broth, Price, null);
        }
        
        /// <remarks/>
        public void UpdateRamenAsync(int Id, string RamenName, int MeatId, string Broth, int Price, object userState) {
            if ((this.UpdateRamenOperationCompleted == null)) {
                this.UpdateRamenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRamenOperationCompleted);
            }
            this.InvokeAsync("UpdateRamen", new object[] {
                        Id,
                        RamenName,
                        MeatId,
                        Broth,
                        Price}, this.UpdateRamenOperationCompleted, userState);
        }
        
        private void OnUpdateRamenOperationCompleted(object arg) {
            if ((this.UpdateRamenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRamenCompleted(this, new UpdateRamenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteRamen", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteRamen(int Id) {
            object[] results = this.Invoke("DeleteRamen", new object[] {
                        Id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRamenAsync(int Id) {
            this.DeleteRamenAsync(Id, null);
        }
        
        /// <remarks/>
        public void DeleteRamenAsync(int Id, object userState) {
            if ((this.DeleteRamenOperationCompleted == null)) {
                this.DeleteRamenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRamenOperationCompleted);
            }
            this.InvokeAsync("DeleteRamen", new object[] {
                        Id}, this.DeleteRamenOperationCompleted, userState);
        }
        
        private void OnDeleteRamenOperationCompleted(object arg) {
            if ((this.DeleteRamenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRamenCompleted(this, new DeleteRamenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRamenById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRamenById(int Id) {
            object[] results = this.Invoke("GetRamenById", new object[] {
                        Id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRamenByIdAsync(int Id) {
            this.GetRamenByIdAsync(Id, null);
        }
        
        /// <remarks/>
        public void GetRamenByIdAsync(int Id, object userState) {
            if ((this.GetRamenByIdOperationCompleted == null)) {
                this.GetRamenByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRamenByIdOperationCompleted);
            }
            this.InvokeAsync("GetRamenById", new object[] {
                        Id}, this.GetRamenByIdOperationCompleted, userState);
        }
        
        private void OnGetRamenByIdOperationCompleted(object arg) {
            if ((this.GetRamenByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRamenByIdCompleted(this, new GetRamenByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllMeat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllMeat() {
            object[] results = this.Invoke("GetAllMeat", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMeatAsync() {
            this.GetAllMeatAsync(null);
        }
        
        /// <remarks/>
        public void GetAllMeatAsync(object userState) {
            if ((this.GetAllMeatOperationCompleted == null)) {
                this.GetAllMeatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMeatOperationCompleted);
            }
            this.InvokeAsync("GetAllMeat", new object[0], this.GetAllMeatOperationCompleted, userState);
        }
        
        private void OnGetAllMeatOperationCompleted(object arg) {
            if ((this.GetAllMeatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMeatCompleted(this, new GetAllMeatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertHeader", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertHeader(int customerId, int staffId, System.DateTime date) {
            object[] results = this.Invoke("InsertHeader", new object[] {
                        customerId,
                        staffId,
                        date});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertHeaderAsync(int customerId, int staffId, System.DateTime date) {
            this.InsertHeaderAsync(customerId, staffId, date, null);
        }
        
        /// <remarks/>
        public void InsertHeaderAsync(int customerId, int staffId, System.DateTime date, object userState) {
            if ((this.InsertHeaderOperationCompleted == null)) {
                this.InsertHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertHeaderOperationCompleted);
            }
            this.InvokeAsync("InsertHeader", new object[] {
                        customerId,
                        staffId,
                        date}, this.InsertHeaderOperationCompleted, userState);
        }
        
        private void OnInsertHeaderOperationCompleted(object arg) {
            if ((this.InsertHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertHeaderCompleted(this, new InsertHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertDetail(int headerId, int ramenId, int quantity) {
            object[] results = this.Invoke("InsertDetail", new object[] {
                        headerId,
                        ramenId,
                        quantity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDetailAsync(int headerId, int ramenId, int quantity) {
            this.InsertDetailAsync(headerId, ramenId, quantity, null);
        }
        
        /// <remarks/>
        public void InsertDetailAsync(int headerId, int ramenId, int quantity, object userState) {
            if ((this.InsertDetailOperationCompleted == null)) {
                this.InsertDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDetailOperationCompleted);
            }
            this.InvokeAsync("InsertDetail", new object[] {
                        headerId,
                        ramenId,
                        quantity}, this.InsertDetailOperationCompleted, userState);
        }
        
        private void OnInsertDetailOperationCompleted(object arg) {
            if ((this.InsertDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDetailCompleted(this, new InsertDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertCustomerCompletedEventHandler(object sender, InsertCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertStaffCompletedEventHandler(object sender, InsertStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUserByUsernameAndPasswordCompletedEventHandler(object sender, GetUserByUsernameAndPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByUsernameAndPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByUsernameAndPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetUserByIdCompletedEventHandler(object sender, GetUserByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateUserProfileCompletedEventHandler(object sender, UpdateUserProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllCustomerCompletedEventHandler(object sender, GetAllCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllStaffCompletedEventHandler(object sender, GetAllStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertRamenCompletedEventHandler(object sender, InsertRamenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertRamenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertRamenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllRamenCompletedEventHandler(object sender, GetAllRamenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRamenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRamenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateRamenCompletedEventHandler(object sender, UpdateRamenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRamenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRamenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteRamenCompletedEventHandler(object sender, DeleteRamenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRamenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRamenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetRamenByIdCompletedEventHandler(object sender, GetRamenByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRamenByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRamenByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAllMeatCompletedEventHandler(object sender, GetAllMeatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMeatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMeatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertHeaderCompletedEventHandler(object sender, InsertHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertDetailCompletedEventHandler(object sender, InsertDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591